{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","state","term","onUpdateSearch","e","target","value","setState","props","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","label","map","clazz","filter","onClick","onFilterSelect","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","post","id","postProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","addPost","App","Math","floor","random","deletePost","index","findIndex","slice","newPost","old","newItem","searchPost","items","length","item","indexOf","filterPost","visiblePosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61444bb6.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\nexport default AppHeader;\r\n","import React from \"react\";\r\n//import css\r\nimport \"./app-header.css\";\r\n\r\nconst AppHeader = ({ liked, allPosts }) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Sergey Kolesnichenko</h1>\r\n            <h2>\r\n                {allPosts} записей, понравилось {liked}\r\n            </h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;\r\n","import React, { Component } from \"react\";\r\n//import css\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n    state = {\r\n        term: \"\",\r\n    };\r\n\r\n    onUpdateSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onUpdateSearch(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import PostStatusFilter from \"./post-status-filter\";\r\nexport default PostStatusFilter;\r\n","import React, { Component } from \"react\";\r\n\r\n//import css\r\nimport \"./post-status-filter.css\";\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    buttons = [\r\n        { name: \"all\", label: \"Все\" },\r\n        { name: \"like\", label: \"Понравилось\" },\r\n    ];\r\n\r\n    render() {\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const active = this.props.filter === name;\r\n            const clazz = active ? \"btn-info\" : \"btn-outline-info\";\r\n            return (\r\n                <button\r\n                    onClick={() => this.props.onFilterSelect(name)}\r\n                    key={name}\r\n                    type=\"button\"\r\n                    className={`btn ${clazz}`}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n        return <div className=\"btn-group\">{buttons}</div>;\r\n    }\r\n}\r\n","import PostListItem from \"./post-list-item\";\r\n\r\nexport default PostListItem;\r\n","import React, { Component } from \"react\";\r\n\r\n//import css\r\nimport \"./post-list-item.css\";\r\n\r\nexport default class PostListItem extends Component {\r\n    render() {\r\n        const {\r\n            label,\r\n            onDelete,\r\n            onToggleImportant,\r\n            onToggleLiked,\r\n            important,\r\n            like,\r\n        } = this.props;\r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n        if (important) {\r\n            classNames += \" important\";\r\n        }\r\n        if (like) {\r\n            classNames += \" like\";\r\n        }\r\n        return (\r\n            <li className={classNames}>\r\n                <span onClick={onToggleLiked} className=\"app-list-item-label\">\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items center\">\r\n                    <button\r\n                        onClick={onToggleImportant}\r\n                        type=\"button\"\r\n                        className=\"btn-star btn-sm\"\r\n                    >\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button\r\n                        onClick={onDelete}\r\n                        type=\"button\"\r\n                        className=\"btn-trash btn-sm\"\r\n                    >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","import PostList from \"./post-list\";\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport PostListItem from \"../post-list-item\";\r\n//import css\r\nimport \"./post-list.css\";\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked }) => {\r\n    const elements = posts.map((post) => {\r\n        const { id, ...postProps } = post;\r\n        return (\r\n            <PostListItem\r\n                key={id}\r\n                {...postProps}\r\n                onDelete={() => onDelete(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onToggleLiked={() => {\r\n                    onToggleLiked(id);\r\n                }}\r\n            />\r\n        );\r\n    });\r\n    return <ul className=\"app-list list-group\">{elements}</ul>;\r\n};\r\n\r\nexport default PostList;\r\n","import PostAddForm from \"./post-add-form\";\r\nimport PostListItem from \"./post-add-form\";\r\n\r\nexport default PostAddForm;\r\n","import React, { Component } from \"react\";\r\n\r\n//import css\r\nimport \"./post-add-form.css\";\r\nexport default class PostAddForm extends Component {\r\n    state = {\r\n        text: \"\",\r\n    };\r\n    onValueChange = (e) => {\r\n        this.setState({ text: e.target.value });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addPost(this.state.text);\r\n        this.setState({\r\n            text: \"\",\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} className=\"bottom-panel d-flex\">\r\n                <input\r\n                    value={this.state.text}\r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы сейчас думаете\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React, { Component } from \"react\";\n// import components\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list\";\nimport PostAddForm from \"../post-add-form\";\n//import css\nimport \"./app.css\";\nexport default class App extends Component {\n    state = {\n        posts: [\n            {\n                label: \"Drink Coffee\",\n                important: false,\n                like: false,\n                id: Math.floor(Math.random() * 1000),\n            },\n            {\n                label: \"Learn React\",\n                important: false,\n                like: false,\n                id: Math.floor(Math.random() * 1000),\n            },\n            {\n                label: \"Build Application\",\n                important: false,\n                like: false,\n                id: Math.floor(Math.random() * 1000),\n            },\n        ],\n        term: \"\",\n        filter: \"all\",\n    };\n\n    deletePost = (id) => {\n        this.setState(({ posts }) => {\n            const index = posts.findIndex((post) => post.id === id);\n\n            const newArr = [\n                ...posts.slice(0, index),\n                ...posts.slice(index + 1),\n            ];\n            return {\n                posts: newArr,\n            };\n        });\n    };\n\n    addPost = (post) => {\n        const newPost = {\n            label: post,\n            important: false,\n            id: Math.floor(Math.random() * 1000),\n        };\n        this.setState(({ posts }) => {\n            const newArr = [...posts, newPost];\n            return {\n                posts: newArr,\n            };\n        });\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(({ posts }) => {\n            const index = posts.findIndex((post) => post.id === id);\n            const old = posts[index];\n            const newItem = {\n                ...old,\n                important: !old.important,\n            };\n            const newArr = [\n                ...posts.slice(0, index),\n                newItem,\n                ...posts.slice(index + 1),\n            ];\n            return {\n                posts: newArr,\n            };\n        });\n    };\n    onToggleLiked = (id) => {\n        this.setState(({ posts }) => {\n            const index = posts.findIndex((post) => post.id === id);\n            const old = posts[index];\n            const newItem = {\n                ...old,\n                like: !old.like,\n            };\n            const newArr = [\n                ...posts.slice(0, index),\n                newItem,\n                ...posts.slice(index + 1),\n            ];\n            return {\n                posts: newArr,\n            };\n        });\n    };\n\n    searchPost = (items, term) => {\n        if (term.length === 0) {\n            return items;\n        }\n        return items.filter((item) => {\n            return item.label.indexOf(term) > -1;\n        });\n    };\n\n    onUpdateSearch = (term) => {\n        this.setState({ term });\n    };\n\n    filterPost = (items, filter) => {\n        if (filter === \"like\") {\n            return items.filter((item) => item.like);\n        } else {\n            return items;\n        }\n    };\n    onFilterSelect = (filter) => {\n        this.setState({ filter });\n    };\n\n    render() {\n        const { posts, term, filter } = this.state;\n        const liked = posts.filter((item) => item.like).length;\n        const allPosts = posts.length;\n\n        const visiblePosts = this.filterPost(\n            this.searchPost(posts, term),\n            filter\n        );\n        return (\n            <div className=\"app\">\n                <AppHeader liked={liked} allPosts={allPosts} />\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\n                    <PostStatusFilter\n                        filter={filter}\n                        onFilterSelect={this.onFilterSelect}\n                    />\n                </div>\n                <PostList\n                    posts={visiblePosts}\n                    onDelete={this.deletePost}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleLiked={this.onToggleLiked}\n                />\n                <PostAddForm addPost={this.addPost} />\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n//import css\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}